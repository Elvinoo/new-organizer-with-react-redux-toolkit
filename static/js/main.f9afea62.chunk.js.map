{"version":3,"sources":["feauters/FavoritesSlice/FavoritesSlice.js","feauters/SearchSlice/SearchSlice.js","store/store.js","components/Header/Header.js","components/SearchBox/SearchBox.js","components/Favorites/Favorites.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","pages/MainPage/MaingPage.js","pages/ListPage/ListPage.js","App.js","reportWebVitals.js","index.js"],"names":["favoritesSlice","createSlice","name","initialState","favoriteList","reducers","addToList","state","action","foundMovie","find","movie","imdbID","payload","includes","concat","Object","toConsumableArray","removeFromList","filteredList","filter","sendId","id","_favoritesSlice$actio","actions","searchSlice","movies","search","store","configureStore","reducer","searchSliceReducer","favoritesSliceReducer","Header","react_default","a","createElement","className","SearchBox","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","value","setValue","onSubmit","e","preventDefault","fetch","then","res","json","data","Search","htmlFor","onChange","target","type","placeholder","disabled","length","Favorites","favoritesList","useSelector","_useState3","_useState4","setId","_useState5","_useState6","setDisabled","map","item","key","Title","Year","onClick","dist","to","style","display","title","method","headers","Content-type","body","JSON","stringify","MovieItem","src","Poster","alt","Movies","storeMovies","MovieItem_MovieItem","MaingPage","Header_Header","SearchBox_SearchBox","Movies_Movies","Favorites_Favorites","ListPage","useParams","setMovies","listName","setListName","useEffect","toUpperCase","rel","href","App","react_router_dist","path","element","ListPage_ListPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.f9afea62.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const favoritesSlice = createSlice({\r\n    name: \"favoriteList\",\r\n    initialState: {\r\n        favoriteList: [],\r\n    },\r\n    reducers: {\r\n        addToList: (state, action) => {\r\n            const foundMovie = state.favoriteList.find(movie => movie.imdbID === action.payload.imdbID);\r\n            if (!state.favoriteList.includes(foundMovie)) {\r\n                state.favoriteList = [...state.favoriteList, action.payload]\r\n            }\r\n\r\n        },\r\n        removeFromList: (state, action) => {\r\n            const filteredList = state.favoriteList.filter(movie => movie.imdbID !== action.payload.imdbID);\r\n            state.favoriteList = filteredList\r\n        },\r\n        sendId: (state, action) => {\r\n            state.id = action.payload\r\n        }\r\n    }\r\n})\r\nexport const { addToList, removeFromList } = favoritesSlice.actions\r\nexport default favoritesSlice.reducer\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const searchSlice = createSlice({\r\n    name: \"moviesList\",\r\n    initialState: {\r\n        movies: []\r\n    },\r\n    reducers: {\r\n        search: (state, action) => {\r\n            state.movies = action.payload;\r\n\r\n        }\r\n    }\r\n})\r\n\r\nexport const { search } = searchSlice.actions;\r\nexport default searchSlice.reducer;\r\n\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport favoritesSliceReducer from \"../feauters/FavoritesSlice/FavoritesSlice\";\r\nimport searchSliceReducer from \"../feauters/SearchSlice/SearchSlice\";\r\n//import idSliceReducer from \"../feauters/IdSlice/IdSlice\";\r\nexport const store = configureStore(\r\n    {\r\n        reducer: {\r\n            movies: searchSliceReducer,\r\n            favoriteList: favoritesSliceReducer,\r\n            // id: idSliceReducer,\r\n\r\n        }\r\n    })","import React from \"react\";\r\nimport \"./Header.css\";\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">MustSee</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { search } from \"../../feauters/SearchSlice/SearchSlice\";\r\nexport default function SearchBox() {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n  const handleDisableAndValue = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const searchMovies = (e) => {\r\n    e.preventDefault();\r\n    fetch(`https://omdbapi.com/?s=${value}&apikey=7249d26b`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch(search(data.Search));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <form\r\n        action=\"submit\"\r\n        className=\"search-box__form\"\r\n        onSubmit={searchMovies}\r\n      >\r\n        <label htmlFor=\"search-input\" className=\"search-box__form-label\">\r\n          Search movie by title:{\" \"}\r\n          <input\r\n            value={value}\r\n            onChange={handleDisableAndValue}\r\n            type=\"text\"\r\n            className=\"search-box__form-input\"\r\n            placeholder=\"E.g. Shawshank Redemption\"\r\n            id=\"search-input\"\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={value.length === 0}\r\n          className=\"search-box__form-submit\"\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Favorites.css\";\r\nimport { removeFromList } from \"../../feauters/FavoritesSlice/FavoritesSlice\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Favorites() {\r\n  const favoritesList = useSelector((store) => store.favoriteList.favoriteList);\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n  const movies = useSelector((store) => store.favoriteList.favoriteList);\r\n  const [id, setId] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    e.target.style.display = \"none\";\r\n    setDisabled(true);\r\n    const data = {\r\n      title: value,\r\n      movies: movies,\r\n    };\r\n\r\n    fetch(`https://acb-api.algoritmika.org/api/movies/list`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setId(res.id);\r\n      });\r\n  };\r\n  const handleValue = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"favorites\">\r\n      <input\r\n        disabled={disabled}\r\n        onChange={handleValue}\r\n        value={value}\r\n        type=\"text\"\r\n        placeholder=\"Enter a name for the list\"\r\n        className=\"favorites__name\"\r\n      />\r\n      <ul className=\"favorites__list\">\r\n        {favoritesList.map((item) => (\r\n          <li key={item.imdbID} className=\"favorites__list-item\">\r\n            {item.Title}({item.Year})\r\n            <button\r\n              disabled={disabled}\r\n              onClick={() => dispatch(removeFromList(item))}\r\n            >\r\n              X\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {!disabled ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"favorites__save\"\r\n          disabled={favoritesList.length === 0 || value === \"\"}\r\n          onClick={handleClick}\r\n        >\r\n          Save List\r\n        </button>\r\n      ) : (\r\n        <Link to={\"/list/\" + id}>Go to the list</Link>\r\n      )}\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToList } from \"../../feauters/FavoritesSlice/FavoritesSlice\";\r\n\r\nimport \"./MovieItem.css\";\r\nexport default function MovieItem(state) {\r\n  const dispatch = useDispatch();\r\n  //\r\n  return (\r\n    <article className=\"movie-item\">\r\n      <img\r\n        className=\"movie-item__poster\"\r\n        src={state.Poster}\r\n        alt={state.Title}\r\n      />\r\n      <div className=\"movie-item__info\">\r\n        <h3 className=\"movie-item__title\">\r\n          {state.Title}&nbsp;({state.Year})\r\n        </h3>\r\n        <button\r\n          type=\"button\"\r\n          className=\"movie-item__add-button\"\r\n          onClick={() => dispatch(addToList(state))}\r\n        >\r\n          Add to list\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MovieItem from \"../MovieItem/MovieItem\";\r\nimport \"./Movies.css\";\r\n\r\nexport default function Movies() {\r\n  const storeMovies = useSelector((store) => store.movies.movies);\r\n  if (!storeMovies) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ul className=\"movies\">\r\n      {storeMovies.map((movie) => (\r\n        <li className=\"movies__item\" key={movie.imdbID}>\r\n          <MovieItem {...movie} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\r\nimport Favorites from \"../../components/Favorites/Favorites\";\r\nimport \"./MainPage.css\";\r\nimport Movies from \"../../components/Movies/Movies\";\r\nexport default function MaingPage() {\r\n  return (\r\n    <div className=\"main-page\">\r\n      <Header />\r\n      <main className=\"main-page__content\">\r\n        <section className=\"main-page__main-section\">\r\n          <div className=\"main-page__search-box\">\r\n            <SearchBox />\r\n          </div>\r\n          <div className=\"main-page__movies\">\r\n            <Movies />\r\n          </div>\r\n        </section>\r\n        <aside className=\"main-page__favorites\">\r\n          <Favorites />\r\n        </aside>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./ListPage.css\";\r\nexport default function ListPage() {\r\n  const { id } = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n  const linktoIMDB = \"https://www.imdb.com/title/\";\r\n  const [listName, setListName] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setListName(data.title.toUpperCase());\r\n        setMovies(data.movies);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"list-page\">\r\n      <h1 className=\"list-page__title\">{listName}</h1>\r\n      {\r\n        <ul>\r\n          {movies.map((item) => {\r\n            return (\r\n              <li key={item.imdbID}>\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={linktoIMDB + item.imdbID}\r\n                >\r\n                  {item.Title}({item.Year})\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport MaingPage from './pages/MainPage/MaingPage';\nimport ListPage from './pages/ListPage/ListPage'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './reset.css';\nimport './common.css';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"*\" element={<MaingPage />} />\n          <Route path=\"/list/:id\" element={<ListPage />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { store } from \"./store/store\";\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}